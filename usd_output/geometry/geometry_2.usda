#usda 1.0
(
    upAxis = "Z"
)

def Xform "geometry_2"
{
    def Mesh "Mesh" (
        prepend apiSchemas = ["MaterialBindingAPI", "PhysicsCollisionAPI", "SemanticsAPI:Semantics_9iSO"]
    )
    {
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [1, 0, 24, 24, 23, 22, 21, 20, 19, 19, 18, 17, 16, 15, 14, 14, 13, 12, 11, 10, 9, 9, 8, 7, 6, 5, 4, 4, 3, 2, 2, 1, 24, 24, 22, 21, 21, 19, 17, 16, 14, 12, 11, 9, 7, 7, 6, 4, 4, 2, 24, 24, 21, 17, 16, 12, 11, 11, 7, 4, 4, 24, 17, 16, 11, 4, 4, 17, 16, 0, 1, 26, 25, 1, 2, 27, 26, 2, 3, 28, 27, 3, 4, 29, 28, 4, 5, 30, 29, 5, 6, 31, 30, 6, 7, 32, 31, 7, 8, 33, 32, 8, 9, 34, 33, 9, 10, 35, 34, 10, 11, 36, 35, 11, 12, 37, 36, 12, 13, 38, 37, 13, 14, 39, 38, 14, 15, 40, 39, 15, 16, 41, 40, 16, 17, 42, 41, 17, 18, 43, 42, 18, 19, 44, 43, 19, 20, 45, 44, 20, 21, 46, 45, 21, 22, 47, 46, 22, 23, 48, 47, 23, 24, 49, 48, 24, 0, 25, 49]
        rel material:binding = </geometry_2/Material>
        point3f[] points = [(-4.5615625, -5.7973485, 0.7), (-4.5615625, -5.2573485, 0.7), (-4.5511627, -4.716017, 0.7), (-4.529495, -4.7013264, 0.7), (-4.516525, -4.7039204, 0.7), (-4.0783424, -4.6963434, 0.7), (-2.6930444, -4.7030883, 0.7), (-1.3700961, -4.7029233, 0.7), (-1.3701528, -4.684666, 0.7), (-0.8301528, -4.684666, 0.7), (-0.8273052, -4.811409, 0.7), (-0.82602644, -5.3236566, 0.7), (-0.82199883, -5.367961, 0.7), (-0.82199883, -5.6079607, 0.7), (-0.82602644, -5.6119885, 0.7), (-0.8273223, -5.6593404, 0.7), (-0.83110875, -5.669094, 0.7), (-0.8318023, -5.7827187, 0.7), (-0.83424085, -5.7932363, 0.7), (-0.8384351, -5.7932363, 0.7), (-0.83872116, -5.798285, 0.7), (-1.0500008, -5.7985215, 0.7), (-1.0537156, -5.802236, 0.7), (-4.50804, -5.8023934, 0.7), (-4.50804, -5.798921, 0.7), (-4.5615625, -5.7973485, 0), (-4.5615625, -5.2573485, 0), (-4.5511627, -4.716017, 0), (-4.529495, -4.7013264, 0), (-4.516525, -4.7039204, 0), (-4.0783424, -4.6963434, 0), (-2.6930444, -4.7030883, 0), (-1.3700961, -4.7029233, 0), (-1.3701528, -4.684666, 0), (-0.8301528, -4.684666, 0), (-0.8273052, -4.811409, 0), (-0.82602644, -5.3236566, 0), (-0.82199883, -5.367961, 0), (-0.82199883, -5.6079607, 0), (-0.82602644, -5.6119885, 0), (-0.8273223, -5.6593404, 0), (-0.83110875, -5.669094, 0), (-0.8318023, -5.7827187, 0), (-0.83424085, -5.7932363, 0), (-0.8384351, -5.7932363, 0), (-0.83872116, -5.798285, 0), (-1.0500008, -5.7985215, 0), (-1.0537156, -5.802236, 0), (-4.50804, -5.8023934, 0), (-4.50804, -5.798921, 0)]
        string semantic:Semantics_9iSO:params:semanticData = "others"
        string semantic:Semantics_9iSO:params:semanticType = "class"
        uniform token subdivisionScheme = "bilinear"
    }

    def Material "Material"
    {
        token outputs:surface.connect = </geometry_2/Material/Shader.outputs:surface>

        def Shader "Shader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.65, 0.1, 1.19)
            token outputs:surface
        }
    }
}

