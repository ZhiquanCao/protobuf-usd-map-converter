#usda 1.0
(
    upAxis = "Z"
)

def Xform "channels_1"
{
    def Mesh "Mesh" (
        prepend apiSchemas = ["MaterialBindingAPI", "PhysicsCollisionAPI", "SemanticsAPI:Semantics_TrCW"]
    )
    {
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [9, 8, 7, 7, 6, 5, 5, 4, 3, 3, 2, 1, 1, 9, 7, 7, 5, 3, 3, 1, 7]
        rel material:binding = </channels_1/Material>
        point3f[] points = [(2.3966742, 3.4207804, 0), (-0.5433259, 3.8407805, 0), (-0.8433259, 4.3207803, 0), (-0.7233259, 4.6207805, 0), (-0.1833259, 4.8007803, 0), (3.1166742, 4.2607803, 0), (3.5966742, 3.7807803, 0), (3.4166741, 3.4207804, 0), (2.816674, 3.3007805, 0), (2.3966742, 3.4207804, 0)]
        string semantic:Semantics_TrCW:params:semanticData = "road"
        string semantic:Semantics_TrCW:params:semanticType = "class"
        uniform token subdivisionScheme = "bilinear"
    }

    def Material "Material"
    {
        token outputs:surface.connect = </channels_1/Material/Shader.outputs:surface>

        def Shader "Shader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 0.26, 0)
            token outputs:surface
        }
    }
}

