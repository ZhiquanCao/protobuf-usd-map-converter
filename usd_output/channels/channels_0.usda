#usda 1.0
(
    upAxis = "Z"
)

def Xform "channels_0"
{
    def Mesh "Mesh" (
        prepend apiSchemas = ["MaterialBindingAPI", "PhysicsCollisionAPI", "SemanticsAPI:Semantics_jkys"]
    )
    {
        int[] faceVertexCounts = [3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 7, 6, 6, 5, 4, 4, 3, 2, 2, 1, 6, 6, 4, 2]
        rel material:binding = </channels_0/Material>
        point3f[] points = [(0.6475991, -5.1408257, 0), (-0.13240089, -4.840826, 0), (-0.07240089, -4.1808257, 0), (0.40759912, -4.060826, 0), (1.6675991, -4.360826, 0), (1.6075991, -5.020826, 0), (0.7675991, -5.080826, 0), (0.6475991, -5.1408257, 0)]
        string semantic:Semantics_jkys:params:semanticData = "road"
        string semantic:Semantics_jkys:params:semanticType = "class"
        uniform token subdivisionScheme = "bilinear"
    }

    def Material "Material"
    {
        token outputs:surface.connect = </channels_0/Material/Shader.outputs:surface>

        def Shader "Shader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 0.26, 0)
            token outputs:surface
        }
    }
}

