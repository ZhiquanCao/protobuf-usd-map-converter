#usda 1.0
(
    upAxis = "Z"
)

def Xform "geometry_1"
{
    def Mesh "Mesh" (
        prepend apiSchemas = ["MaterialBindingAPI", "PhysicsCollisionAPI", "SemanticsAPI:Semantics_Sn5I"]
    )
    {
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 18, 19, 18, 16, 17, 16, 14, 15, 14, 12, 13, 12, 10, 11, 8, 6, 7, 6, 4, 5, 3, 1, 2, 16, 12, 14, 6, 3, 4, 18, 12, 16, 6, 1, 3, 0, 12, 18, 8, 1, 6, 0, 10, 12, 9, 1, 8, 0, 9, 10, 9, 0, 1, 0, 1, 21, 20, 1, 2, 22, 21, 2, 3, 23, 22, 3, 4, 24, 23, 4, 5, 25, 24, 5, 6, 26, 25, 6, 7, 27, 26, 7, 8, 28, 27, 8, 9, 29, 28, 9, 10, 30, 29, 10, 11, 31, 30, 11, 12, 32, 31, 12, 13, 33, 32, 13, 14, 34, 33, 14, 15, 35, 34, 15, 16, 36, 35, 16, 17, 37, 36, 17, 18, 38, 37, 18, 19, 39, 38, 19, 0, 20, 39]
        rel material:binding = </geometry_1/Material>
        point3f[] points = [(9.483802, -2.6881497, 0.5), (8.210893, -5.9628572, 0.5), (8.372676, -6.0281897, 0.5), (8.381418, -6.3981333, 0.5), (8.591532, -6.4965024, 0.5), (8.744749, -7.073712, 0.5), (7.763446, -7.0374074, 0.5), (7.822145, -5.6830525, 0.5), (8.586879, -4.262482, 0.5), (9.091928, -2.1433089, 0.5), (9.210906, -0.52646786, 0.5), (8.6878395, 2.7669423, 0.5), (8.905475, 2.946213, 0.5), (8.537087, 3.1047316, 0.5), (8.520399, 3.4105291, 0.5), (8.737372, 3.6241744, 0.5), (9.404743, 3.5734105, 0.5), (9.545472, 2.5645635, 0.5), (9.279901, 2.1101952, 0.5), (9.628955, 0.37952742, 0.5), (9.483802, -2.6881497, 0), (8.210893, -5.9628572, 0), (8.372676, -6.0281897, 0), (8.381418, -6.3981333, 0), (8.591532, -6.4965024, 0), (8.744749, -7.073712, 0), (7.763446, -7.0374074, 0), (7.822145, -5.6830525, 0), (8.586879, -4.262482, 0), (9.091928, -2.1433089, 0), (9.210906, -0.52646786, 0), (8.6878395, 2.7669423, 0), (8.905475, 2.946213, 0), (8.537087, 3.1047316, 0), (8.520399, 3.4105291, 0), (8.737372, 3.6241744, 0), (9.404743, 3.5734105, 0), (9.545472, 2.5645635, 0), (9.279901, 2.1101952, 0), (9.628955, 0.37952742, 0)]
        string semantic:Semantics_Sn5I:params:semanticData = "others"
        string semantic:Semantics_Sn5I:params:semanticType = "class"
        uniform token subdivisionScheme = "bilinear"
    }

    def Material "Material"
    {
        token outputs:surface.connect = </geometry_1/Material/Shader.outputs:surface>

        def Shader "Shader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.65, 0.1, 1.19)
            token outputs:surface
        }
    }
}

